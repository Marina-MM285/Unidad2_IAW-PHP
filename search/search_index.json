{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"Practica2/","text":"Creaci\u00f3n y configuraci\u00f3n de un certificado SSL/TLS autofirmado en Apche Creaci\u00f3n del certificado autofirmado Para crear el certificado autofirmado utilidadopenssl usaremos el siguiente comando: sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/private/apache-selfsigned.key -out /etc/ssl/certs/apache-selfsigned.crt Introducimos unos datos que se a\u00f1adir\u00e1n al certificado. En mi caso he a\u00f1adido los siguientes: Automatizar la creaci\u00f3n de un certificado autofirmado Crearemos un script bash donde especificaremos los argumentos que le pasaremos al comando anterior a trav\u00e9s del par\u00e1metro -subj . #!/bin/bash set -x # Variables con los datos del certificado OPENSSL_COUNTRY=\"ES\" OPENSSL_PROVINCE=\"Valencia\" OPENSSL_LOCALITY=\"Gandia\" OPENSSL_ORGANIZATION=\"IES Jaume II el Just\" OPENSSL_ORGUNIT=\"Departamento de Informatica\" OPENSSL_COMMON_NAME=\"practica-certificado.local\" OPENSSL_EMAIL=\"marina@ieseljust.com\" # Creaci\u00f3n del certificado sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/private/apache-selfsigned.key -out /etc/ssl/certs/apache-selfsigned.crt -subj \"/C=$OPENSSL_COUNTRY/ST=$OPENSSL_PROVINCE/L=$OPENSSL_LOCALITY/O=$OPENSSL_ORGANIZATION/OU=$OPENSSL_ORGUNIT/CN=$OPENSSL_COMMON_NAME/emailAddress=$OPENSSL_EMAIL\" Script Puedes descargar el script haciendo clic en el siguiente bot\u00f3n: Descargar Script { .md-button .md-button--primary } Configuraci\u00f3n del host virtual con SSL/TSL en el servidor Apache Copiamos el archivo \"default-ssl.conf\", que es la configuraci\u00f3n del VirtualHost, donde habilitaremos el tr\u00e1fico http y lo editamos. sudo cd /et/apache2/sites-available sudo cp default-ssl.conf certificado-ssl.conf sudo nano certificado-ssl.conf <VirtualHost *:443> #ServerName practica-certificado.local DocumentRoot/var/www/html DirectoryIndex index.php index.html SSLEngine on SSLCertificateFile /etc/ssl/certs/apache-selfsigned.crt SSLCertificateKeyFile /etc/ssl/private/apache-selfsigned.key </VirtualHost> Habilitaremos el VirtualHost que acabamos de configurar sudo a2ensite certificado-ssl.conf Habilitaremos el m\u00f3dulo SSL en Apache y reiniciaremos el servicio sudo a2enmod ssl sudo systemctl restart apache2 sudo systemctl status apache2 Copiamos y editamos el VirtualHost de HTTP para que redirija todo el tr\u00e1fico a HTTPS sudo cd /et/apache2/sites-available sudo cp 000-default-ssl.conf 000-certificado-ssl.conf sudo nano 000-certificado-ssl.conf <VirtualHost *:80> #ServerName practica-certificado.local DocumentRoot/var/www/html #Redirige alpuerto 443 (HTTPS) RewriteEngineOn RewriteCond%{HTTPS} off RewriteRule^ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301] </VirtualHost> Habilitaremos el m\u00f3dulo rewrite y reiniciamos en servicio sudo a2enmod rewrite sudo systemctl restart apache2 sudo systemctl status apache2 Nos aseguramos de que el puerto 443 est\u00e9 abierto en las reglas del firewall para permitir el trafico hhtps. Modificamos el fichero /etc/hosts sudo nano /etc/hosts Una vez hecho todo esto, abriremos un navegador y accederemos al nombre de nuestro dominio. En mi caso ser\u00e1: https://practica-certificado.local","title":"Creaci\u00f3n y configuraci\u00f3n de un certificado SSL/TLS autofirmado en Apche"},{"location":"Practica2/#creacion-y-configuracion-de-un-certificado-ssltls-autofirmado-en-apche","text":"","title":"Creaci\u00f3n y configuraci\u00f3n de un certificado SSL/TLS autofirmado en Apche"},{"location":"Practica2/#creacion-del-certificado-autofirmado","text":"Para crear el certificado autofirmado utilidadopenssl usaremos el siguiente comando: sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/private/apache-selfsigned.key -out /etc/ssl/certs/apache-selfsigned.crt Introducimos unos datos que se a\u00f1adir\u00e1n al certificado. En mi caso he a\u00f1adido los siguientes:","title":"Creaci\u00f3n del certificado autofirmado"},{"location":"Practica2/#automatizar-la-creacion-de-un-certificado-autofirmado","text":"Crearemos un script bash donde especificaremos los argumentos que le pasaremos al comando anterior a trav\u00e9s del par\u00e1metro -subj . #!/bin/bash set -x # Variables con los datos del certificado OPENSSL_COUNTRY=\"ES\" OPENSSL_PROVINCE=\"Valencia\" OPENSSL_LOCALITY=\"Gandia\" OPENSSL_ORGANIZATION=\"IES Jaume II el Just\" OPENSSL_ORGUNIT=\"Departamento de Informatica\" OPENSSL_COMMON_NAME=\"practica-certificado.local\" OPENSSL_EMAIL=\"marina@ieseljust.com\" # Creaci\u00f3n del certificado sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/private/apache-selfsigned.key -out /etc/ssl/certs/apache-selfsigned.crt -subj \"/C=$OPENSSL_COUNTRY/ST=$OPENSSL_PROVINCE/L=$OPENSSL_LOCALITY/O=$OPENSSL_ORGANIZATION/OU=$OPENSSL_ORGUNIT/CN=$OPENSSL_COMMON_NAME/emailAddress=$OPENSSL_EMAIL\"","title":"Automatizar la creaci\u00f3n de un certificado autofirmado"},{"location":"Practica2/#script","text":"Puedes descargar el script haciendo clic en el siguiente bot\u00f3n: Descargar Script { .md-button .md-button--primary }","title":"Script"},{"location":"Practica2/#configuracion-del-host-virtual-con-ssltsl-en-el-servidor-apache","text":"Copiamos el archivo \"default-ssl.conf\", que es la configuraci\u00f3n del VirtualHost, donde habilitaremos el tr\u00e1fico http y lo editamos. sudo cd /et/apache2/sites-available sudo cp default-ssl.conf certificado-ssl.conf sudo nano certificado-ssl.conf <VirtualHost *:443> #ServerName practica-certificado.local DocumentRoot/var/www/html DirectoryIndex index.php index.html SSLEngine on SSLCertificateFile /etc/ssl/certs/apache-selfsigned.crt SSLCertificateKeyFile /etc/ssl/private/apache-selfsigned.key </VirtualHost> Habilitaremos el VirtualHost que acabamos de configurar sudo a2ensite certificado-ssl.conf Habilitaremos el m\u00f3dulo SSL en Apache y reiniciaremos el servicio sudo a2enmod ssl sudo systemctl restart apache2 sudo systemctl status apache2 Copiamos y editamos el VirtualHost de HTTP para que redirija todo el tr\u00e1fico a HTTPS sudo cd /et/apache2/sites-available sudo cp 000-default-ssl.conf 000-certificado-ssl.conf sudo nano 000-certificado-ssl.conf <VirtualHost *:80> #ServerName practica-certificado.local DocumentRoot/var/www/html #Redirige alpuerto 443 (HTTPS) RewriteEngineOn RewriteCond%{HTTPS} off RewriteRule^ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301] </VirtualHost> Habilitaremos el m\u00f3dulo rewrite y reiniciamos en servicio sudo a2enmod rewrite sudo systemctl restart apache2 sudo systemctl status apache2 Nos aseguramos de que el puerto 443 est\u00e9 abierto en las reglas del firewall para permitir el trafico hhtps. Modificamos el fichero /etc/hosts sudo nano /etc/hosts Una vez hecho todo esto, abriremos un navegador y accederemos al nombre de nuestro dominio. En mi caso ser\u00e1: https://practica-certificado.local","title":"Configuraci\u00f3n del host virtual con SSL/TSL en el servidor Apache"},{"location":"Practica3/","text":"Instalar, configurar y securizar phpMyAdmin Prerrequisitos Antes de instalar PHP, deber\u00edas instalar: * Apache (hecho en la pr\u00e1ctica anterior) * MySQL * sudo apt update * sudo apt install mysql-server Instalaci\u00f3n de phpMyAdmin Instala phpMyAdmin junto con las extensiones PHP necesarias. sudo apt install php-mbstring php-zip php-gd php-json php-curl php-mbstring, php-zip, php-gd, php-json, php-curl sudo apt install php libapache2-mod-php Para comprobar que hemos instalado bien php crearemos un archivo con la siguiente informaci\u00f3n y lo buscaremos a trav\u00e9s del navegador. * sudo nano /var/www/info.php <?php phpinfo(); ?> http:// IP / nombre_archivo En mi caso ser\u00e1 http://10.10.10.196/info.php Configurar phpMyAdmin para que funcione con Apache. sudo apt install phpmyadmin Para configurarlo correctamente elejiremnos las siguientes opciones: apache2 --> para el servidor s\u00ed --> cuando nos pregunte si queremos usar dbconfig-common para configurar la base de datos Asignaremos una contrase\u00f1a, en mi caso le he puesto: phpmyadmin En mi caso la instalaci\u00f3n ya estaba hecha, no he podido poner capturas. Vamos a habilitar el archivo de configuraci\u00f3n de phpmyadmin cd /etc/phpmyadmin/apache.conf sudo cp apache.conf /etc/conf-available/phpmyadmin.conf sudo a2enconf phpmyadmin.conf . Habilita la extensi\u00f3n mbstring y reinicia Apache * sudo phpenmod mbstring * sudo systemctl restart apache Configuraci\u00f3n del Acceso por Contrase\u00f1a para la Cuenta Root de MySQL Cambia el m\u00e9todo de autenticaci\u00f3n del usuario root de MySQL (de auth_socket a caching_sha2_password o mysql_native_password) sudo mysql select user,host,authentication_string,plugin from mysql.user; * alter user 'root'@'localhost' identified with 'mysql_native_password' by 'root'; Verificar los m\u00e9todos de autenticaci\u00f3n empleados por cada uno de tus usuarios. Entraremos introduciendo la contrase\u00f1a que le hemos asignado en el paso anterior con el comando: sudo mysql -u root -p Configuraci\u00f3n del Acceso por Contrase\u00f1a para un Usuario Dedicado de MySQL Crear un nuevo usuario de MySQL con una contrase\u00f1a segura. create user 'marina'@'localhost' identified with 'mysql_native_password' by 'phpmyadmin'; Otorgar al nuevo usuario los privilegios apropiados para gestionar las bases de datos a trav\u00e9s de phpMyAdmin grant all privileges on . to 'marina'@'localhost' with grant option; Comprobamos que podemos acceder a la interfaz web https:// your_domain_or_IP /phpmyadmin En mi caso ser\u00e1 https:// your_domain_or_IP /phpmyadmin Asegurando tu Instancia de phpMyAdmin Habilitar el uso de sobrescrituras de archivos .htaccess en la configuraci\u00f3n de Apache para phpMyAdmin. Editamos el archivo phpmyadmin.con y le a\u00f1adimos la l\u00ednea AllowOverride All sudo nano /etc/apache2/conf-available/phpmyadmin.conf Tendria que quedar de la siguiente forma: <Directory /usr/share/phpmyadmin> Options SymLinksIfOwnerMatch DirectoryIndex index.php AllowOverride All ... # Otras directivas </Directory> Crear un archivo .htaccess en el directorio de phpMyAdmin para implementar autenticaci\u00f3n b\u00e1sica. Creamos el archivo y lo editamos cd /usr/share/phpmyadmin sudo nano .htaccess Tendria que quedar de la siguiente forma: AuthType Basic AuthName \"Acceso Restringido\" AuthUserFile /etc/phpmyadmin/.htpasswd Require valid-user Crear un archivo .htpasswd para almacenar las credenciales de usuario y contrase\u00f1a. sudo htpasswd -c /etc/phpmyadmin/.htpasswd phpmyadmin phpmyadmin_htaccess Reiniciar Apache para aplicar los cambios. sudo systemctl restart apache2 sudo systemctl status apache2 Comprovar que funciona http:// IP / nombre_archivo En mi caso ser\u00e1 http://192.168.0.144/phpmyadmin","title":"Instalar, configurar y securizar phpMyAdmin"},{"location":"Practica3/#instalar-configurar-y-securizar-phpmyadmin","text":"","title":"Instalar, configurar y securizar phpMyAdmin"},{"location":"Practica3/#prerrequisitos","text":"Antes de instalar PHP, deber\u00edas instalar: * Apache (hecho en la pr\u00e1ctica anterior) * MySQL * sudo apt update * sudo apt install mysql-server","title":"Prerrequisitos"},{"location":"Practica3/#instalacion-de-phpmyadmin","text":"Instala phpMyAdmin junto con las extensiones PHP necesarias. sudo apt install php-mbstring php-zip php-gd php-json php-curl php-mbstring, php-zip, php-gd, php-json, php-curl sudo apt install php libapache2-mod-php Para comprobar que hemos instalado bien php crearemos un archivo con la siguiente informaci\u00f3n y lo buscaremos a trav\u00e9s del navegador. * sudo nano /var/www/info.php <?php phpinfo(); ?> http:// IP / nombre_archivo En mi caso ser\u00e1 http://10.10.10.196/info.php Configurar phpMyAdmin para que funcione con Apache. sudo apt install phpmyadmin Para configurarlo correctamente elejiremnos las siguientes opciones: apache2 --> para el servidor s\u00ed --> cuando nos pregunte si queremos usar dbconfig-common para configurar la base de datos Asignaremos una contrase\u00f1a, en mi caso le he puesto: phpmyadmin En mi caso la instalaci\u00f3n ya estaba hecha, no he podido poner capturas. Vamos a habilitar el archivo de configuraci\u00f3n de phpmyadmin cd /etc/phpmyadmin/apache.conf sudo cp apache.conf /etc/conf-available/phpmyadmin.conf sudo a2enconf phpmyadmin.conf . Habilita la extensi\u00f3n mbstring y reinicia Apache * sudo phpenmod mbstring * sudo systemctl restart apache","title":"Instalaci\u00f3n de phpMyAdmin"},{"location":"Practica3/#configuracion-del-acceso-por-contrasena-para-la-cuenta-root-de-mysql","text":"Cambia el m\u00e9todo de autenticaci\u00f3n del usuario root de MySQL (de auth_socket a caching_sha2_password o mysql_native_password) sudo mysql select user,host,authentication_string,plugin from mysql.user; * alter user 'root'@'localhost' identified with 'mysql_native_password' by 'root'; Verificar los m\u00e9todos de autenticaci\u00f3n empleados por cada uno de tus usuarios. Entraremos introduciendo la contrase\u00f1a que le hemos asignado en el paso anterior con el comando: sudo mysql -u root -p","title":"Configuraci\u00f3n del Acceso por Contrase\u00f1a para la Cuenta Root de MySQL"},{"location":"Practica3/#configuracion-del-acceso-por-contrasena-para-un-usuario-dedicado-de-mysql","text":"Crear un nuevo usuario de MySQL con una contrase\u00f1a segura. create user 'marina'@'localhost' identified with 'mysql_native_password' by 'phpmyadmin'; Otorgar al nuevo usuario los privilegios apropiados para gestionar las bases de datos a trav\u00e9s de phpMyAdmin grant all privileges on . to 'marina'@'localhost' with grant option; Comprobamos que podemos acceder a la interfaz web https:// your_domain_or_IP /phpmyadmin En mi caso ser\u00e1 https:// your_domain_or_IP /phpmyadmin","title":"Configuraci\u00f3n del Acceso por Contrase\u00f1a para un Usuario Dedicado de MySQL"},{"location":"Practica3/#asegurando-tu-instancia-de-phpmyadmin","text":"Habilitar el uso de sobrescrituras de archivos .htaccess en la configuraci\u00f3n de Apache para phpMyAdmin. Editamos el archivo phpmyadmin.con y le a\u00f1adimos la l\u00ednea AllowOverride All sudo nano /etc/apache2/conf-available/phpmyadmin.conf Tendria que quedar de la siguiente forma: <Directory /usr/share/phpmyadmin> Options SymLinksIfOwnerMatch DirectoryIndex index.php AllowOverride All ... # Otras directivas </Directory> Crear un archivo .htaccess en el directorio de phpMyAdmin para implementar autenticaci\u00f3n b\u00e1sica. Creamos el archivo y lo editamos cd /usr/share/phpmyadmin sudo nano .htaccess Tendria que quedar de la siguiente forma: AuthType Basic AuthName \"Acceso Restringido\" AuthUserFile /etc/phpmyadmin/.htpasswd Require valid-user Crear un archivo .htpasswd para almacenar las credenciales de usuario y contrase\u00f1a. sudo htpasswd -c /etc/phpmyadmin/.htpasswd phpmyadmin phpmyadmin_htaccess Reiniciar Apache para aplicar los cambios. sudo systemctl restart apache2 sudo systemctl status apache2","title":"Asegurando tu Instancia de phpMyAdmin"},{"location":"Practica3/#comprovar-que-funciona","text":"http:// IP / nombre_archivo En mi caso ser\u00e1 http://192.168.0.144/phpmyadmin","title":"Comprovar que funciona"}]}