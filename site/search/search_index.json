{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"Practica2/","title":"Creaci\u00f3n y configuraci\u00f3n de un certificado SSL/TLS autofirmado en Apche","text":""},{"location":"Practica2/#creacion-del-certificado-autofirmado","title":"Creaci\u00f3n del certificado autofirmado","text":"<p>Para crear el certificado autofirmado utilidadopenssl usaremos el siguiente comando: </p> <pre><code>sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/private/apache-selfsigned.key -out /etc/ssl/certs/apache-selfsigned.crt\n</code></pre> <p>Introducimos unos datos que se a\u00f1adir\u00e1n al certificado. En mi caso he a\u00f1adido los siguientes: </p>"},{"location":"Practica2/#automatizar-la-creacion-de-un-certificado-autofirmado","title":"Automatizar la creaci\u00f3n de un certificado autofirmado","text":"<p>Crearemos un script bash donde especificaremos los argumentos que le pasaremos al comando anterior a trav\u00e9s del par\u00e1metro -subj.</p> <pre><code>#!/bin/bash\nset -x\n\n# Variables con los datos del certificado\nOPENSSL_COUNTRY=\"ES\"\nOPENSSL_PROVINCE=\"Valencia\"\nOPENSSL_LOCALITY=\"Gandia\"\nOPENSSL_ORGANIZATION=\"IES Jaume II el Just\"\nOPENSSL_ORGUNIT=\"Departamento de Informatica\"\nOPENSSL_COMMON_NAME=\"practica-certificado.local\"\nOPENSSL_EMAIL=\"marina@ieseljust.com\"\n\n# Creaci\u00f3n del certificado\nsudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/private/apache-selfsigned.key -out /etc/ssl/certs/apache-selfsigned.crt -subj \"/C=$OPENSSL_COUNTRY/ST=$OPENSSL_PROVINCE/L=$OPENSSL_LOCALITY/O=$OPENSSL_ORGANIZATION/OU=$OPENSSL_ORGUNIT/CN=$OPENSSL_COMMON_NAME/emailAddress=$OPENSSL_EMAIL\"\n\n</code></pre> <p></p>"},{"location":"Practica2/#script","title":"Script","text":"<p>Puedes descargar el script haciendo clic en el siguiente bot\u00f3n:</p> <p>Descargar Script</p>"},{"location":"Practica2/#configuracion-del-host-virtual-con-ssltsl-en-el-servidor-apache","title":"Configuraci\u00f3n del host virtual con SSL/TSL en el servidor Apache","text":"<p>Copiamos el archivo \"default-ssl.conf\", que es la configuraci\u00f3n del VirtualHost, donde habilitaremos el tr\u00e1fico http y lo editamos.</p> <ul> <li>sudo cd /et/apache2/sites-available</li> <li>sudo cp default-ssl.conf certificado-ssl.conf </li> <li>sudo nano certificado-ssl.conf</li> </ul> <pre><code>&lt;VirtualHost *:443&gt;\n    #ServerName practica-certificado.local\n    DocumentRoot/var/www/html\n    DirectoryIndex index.php index.html\n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/apache-selfsigned.crt\n    SSLCertificateKeyFile /etc/ssl/private/apache-selfsigned.key\n&lt;/VirtualHost&gt;\n</code></pre> <ol> <li> <p>Habilitaremos el VirtualHost que acabamos de configurar</p> <ul> <li>sudo a2ensite certificado-ssl.conf </li> </ul> </li> <li> <p>Habilitaremos el m\u00f3dulo SSL en Apache y reiniciaremos el servicio</p> <ul> <li>sudo a2enmod ssl</li> <li> <p>sudo systemctl restart apache2 </p> </li> <li> <p>sudo systemctl status apache2 </p> </li> </ul> </li> <li> <p>Copiamos y editamos el VirtualHost de HTTP para que redirija todo el tr\u00e1fico a HTTPS</p> <ul> <li>sudo cd /et/apache2/sites-available</li> <li>sudo cp 000-default-ssl.conf 000-certificado-ssl.conf </li> <li>sudo nano 000-certificado-ssl.conf</li> </ul> </li> </ol> <pre><code>    &lt;VirtualHost *:80&gt;\n        #ServerName practica-certificado.local\n        DocumentRoot/var/www/html\n        #Redirige alpuerto 443 (HTTPS)\n        RewriteEngineOn\n        RewriteCond%{HTTPS} off\n        RewriteRule^ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]\n    &lt;/VirtualHost&gt;\n</code></pre> <ol> <li> <p>Habilitaremos el m\u00f3dulo rewrite y reiniciamos en servicio</p> <ul> <li>sudo a2enmod rewrite</li> <li> <p>sudo systemctl restart apache2 </p> </li> <li> <p>sudo systemctl status apache2 </p> </li> </ul> </li> <li> <p>Nos aseguramos de que el puerto 443 est\u00e9 abierto en las reglas del firewall para permitir  el trafico hhtps. </p> </li> <li> <p>Modificamos el fichero /etc/hosts</p> <ul> <li>sudo nano /etc/hosts</li> </ul> </li> </ol> <p></p> <p>Una vez hecho todo esto, abriremos un navegador y accederemos al nombre de nuestro dominio. En mi caso ser\u00e1:</p> <pre><code>https://practica-certificado.local\n</code></pre>"},{"location":"Practica3/","title":"Instalar, configurar y securizar phpMyAdmin","text":""},{"location":"Practica3/#prerrequisitos","title":"Prerrequisitos","text":"<p>Antes de instalar PHP, deber\u00edas instalar: * Apache (hecho en la pr\u00e1ctica anterior) * MySQL   * sudo apt update   * sudo apt install mysql-server</p> <p></p>"},{"location":"Practica3/#instalacion-de-phpmyadmin","title":"Instalaci\u00f3n de phpMyAdmin","text":"<ol> <li>Instala phpMyAdmin junto con las extensiones PHP necesarias.<ul> <li>sudo apt install php-mbstring php-zip php-gd php-json php-curl</li> </ul> </li> </ol> <pre><code>php-mbstring, php-zip, php-gd, php-json, php-curl\n</code></pre> <ul> <li>sudo apt install php libapache2-mod-php</li> </ul> <p>Para comprobar que hemos instalado bien php crearemos un archivo con la siguiente informaci\u00f3n y lo buscaremos a trav\u00e9s del navegador. * sudo nano /var/www/info.php</p> <pre><code>&lt;?php\nphpinfo();\n?&gt;\n</code></pre> <ul> <li>http://IP/nombre_archivo<ul> <li>En mi caso ser\u00e1 http://10.10.10.196/info.php</li> </ul> </li> </ul> <p></p> <ol> <li>Configurar phpMyAdmin para que funcione con Apache.</li> <li>sudo apt install phpmyadmin</li> </ol> <p>Para configurarlo correctamente elejiremnos las siguientes opciones:</p> <ul> <li>apache2 --&gt; para el servidor</li> <li>s\u00ed --&gt; cuando nos pregunte si queremos usar dbconfig-common para configurar la base de datos</li> <li>Asignaremos una contrase\u00f1a, en mi caso le he puesto:<ul> <li>phpmyadmin <p>En mi caso la instalaci\u00f3n ya estaba hecha, no he podido poner capturas.</p> </li> </ul> </li> <li>Vamos a habilitar el archivo de configuraci\u00f3n de phpmyadmin<ul> <li>cd /etc/phpmyadmin/apache.conf</li> <li>sudo cp apache.conf /etc/conf-available/phpmyadmin.conf</li> <li>sudo a2enconf phpmyadmin.conf</li> </ul> </li> </ul> <p> </p> <p>. Habilita la extensi\u00f3n mbstring y reinicia Apache   * sudo phpenmod mbstring   * sudo systemctl restart apache</p> <p></p>"},{"location":"Practica3/#configuracion-del-acceso-por-contrasena-para-la-cuenta-root-de-mysql","title":"Configuraci\u00f3n del Acceso por Contrase\u00f1a para la Cuenta Root de MySQL","text":"<ol> <li>Cambia el m\u00e9todo de autenticaci\u00f3n del usuario root de MySQL (de auth_socket a caching_sha2_password o mysql_native_password)</li> <li>sudo mysql</li> <li>select user,host,authentication_string,plugin from mysql.user;</li> </ol> <p>   * alter user 'root'@'localhost' identified with 'mysql_native_password' by 'root';</p> <p></p> <ol> <li>Verificar los m\u00e9todos de autenticaci\u00f3n empleados por cada uno de tus usuarios.</li> <li>Entraremos introduciendo la contrase\u00f1a que le hemos asignado en el paso anterior con el comando:<ul> <li>sudo mysql -u root -p</li> </ul> </li> </ol> <p></p>"},{"location":"Practica3/#configuracion-del-acceso-por-contrasena-para-un-usuario-dedicado-de-mysql","title":"Configuraci\u00f3n del Acceso por Contrase\u00f1a para un Usuario Dedicado de MySQL","text":"<ol> <li>Crear un nuevo usuario de MySQL con una contrase\u00f1a segura.</li> <li>create user 'marina'@'localhost' identified with 'mysql_native_password' by 'phpmyadmin'; </li> </ol> <ol> <li>Otorgar al nuevo usuario los privilegios apropiados para gestionar las bases de datos a trav\u00e9s de phpMyAdmin</li> <li>grant all privileges on . to 'marina'@'localhost' with grant option;</li> </ol> <ul> <li>Comprobamos que podemos acceder a la interfaz web</li> <li>https://your_domain_or_IP/phpmyadmin<ul> <li>En mi caso ser\u00e1 https://your_domain_or_IP/phpmyadmin</li> </ul> </li> </ul>"},{"location":"Practica3/#asegurando-tu-instancia-de-phpmyadmin","title":"Asegurando tu Instancia de phpMyAdmin","text":"<ol> <li>Habilitar el uso de sobrescrituras de archivos .htaccess en la configuraci\u00f3n de Apache para phpMyAdmin.</li> <li>Editamos el archivo phpmyadmin.con y le a\u00f1adimos la l\u00ednea AllowOverride All<ul> <li>sudo nano /etc/apache2/conf-available/phpmyadmin.conf</li> <li>Tendria que quedar de la siguiente forma:</li> </ul> </li> </ol> <pre><code>&lt;Directory /usr/share/phpmyadmin&gt;\n        Options SymLinksIfOwnerMatch\n        DirectoryIndex index.php\n        AllowOverride All\n        ...  # Otras directivas\n&lt;/Directory&gt;\n</code></pre> <ol> <li>Crear un archivo .htaccess en el directorio de phpMyAdmin para implementar autenticaci\u00f3n b\u00e1sica.</li> <li>Creamos el archivo y lo editamos<ul> <li>cd /usr/share/phpmyadmin</li> <li>sudo nano .htaccess</li> <li>Tendria que quedar de la siguiente forma:</li> </ul> </li> </ol> <pre><code>AuthType Basic\n   AuthName \"Acceso Restringido\"\n   AuthUserFile /etc/phpmyadmin/.htpasswd\n   Require valid-user\n</code></pre> <ol> <li>Crear un archivo .htpasswd para almacenar las credenciales de usuario y contrase\u00f1a.</li> <li>sudo htpasswd -c /etc/phpmyadmin/.htpasswd phpmyadmin<ul> <li>phpmyadmin_htaccess</li> </ul> </li> </ol> <ol> <li>Reiniciar Apache para aplicar los cambios.</li> <li>sudo systemctl restart apache2</li> <li>sudo systemctl status apache2</li> </ol>"},{"location":"Practica3/#comprovar-que-funciona","title":"Comprovar que funciona","text":"<ul> <li>http://IP/nombre_archivo<ul> <li>En mi caso ser\u00e1 http://192.168.0.144/phpmyadmin</li> </ul> </li> </ul>"}]}